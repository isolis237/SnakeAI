from __future__ import annotations
from typing import Protocol, Tuple, Any
import numpy as np

class QNetwork(Protocol):
    """Maps observations -> Q-values for each discrete action."""
    def obs_shape(self) -> Tuple[int, ...]: ...
    def num_actions(self) -> int: ...
    def parameters(self) -> Any: ...
    def eval(self) -> None: ...
    def train(self) -> None: ...
    def q_values(self, obs_batch: np.ndarray) -> np.ndarray: ...
    def hard_update_from(self, other: "QNetwork") -> None: ...
    def soft_update_from(self, other: "QNetwork", tau: float) -> None: ...
    def save_weights(self, path: str) -> None: ...
    def load_weights(self, path: str) -> None: ...
